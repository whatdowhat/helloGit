<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
xmlns:beans="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">


	<beans:bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.UnanimousBased">	
		<beans:constructor-arg>
			<beans:list>
				<beans:bean class="org.springframework.security.access.vote.RoleVoter">
					<beans:property name="rolePrefix" value="" />
				</beans:bean>
				<beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</beans:list>
		</beans:constructor-arg>
		<beans:property name="allowIfAllAbstainDecisions"
			value="false" />
	</beans:bean>

	<beans:bean id="reloadableFilterInvocationSecurityMetadataSource"
		class="com.keep.going.security.ReloadableFilterInvocationSecurityMetadataSource" >
		<beans:constructor-arg ref="requestMap" />
		<beans:property name="securedObjectService" ref="securedObjectService" />
	</beans:bean>

	<beans:bean id="securedObjectService"
		class="com.keep.going.security.SecuredObjectServiceImpl">
		<beans:property name="secureObjectDao" ref="securedObjectDao" />
	</beans:bean>

	<beans:bean id="securedObjectDao"
		class="com.keep.going.security.SecuredObjectDao">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="sqlRolesAndUrl"
			value="
		SELECT A.RESOURCE_PATTERN AS URL, B.AUTHORITY AS AUTHORITY 
		FROM SECURED_RESOURCES A, SECURED_RESOURCES_ROLE B 
		WHERE A.RESOURCE_ID = B.RESOURCE_ID 
		AND A.RESOURCE_TYPE = 'url' 
		ORDER BY A.SORT_ORDER" />
	</beans:bean>

	<beans:bean id="requestMap"
		class="com.keep.going.security.UrlResourcesMapFactoryBean"
		init-method="init">
		<beans:property name="securedObjectService" ref="securedObjectService" />
	</beans:bean>

<!-- 	<http >
		<intercept-url pattern="/**" access="hasRole('USER')" />
		
		<intercept-url pattern="/**" access="permitAll" />
		<form-login/>
		<logout/>
	</http>
 -->

	<!-- <authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="jimi" password="jimispassword" authorities="ROLE_USER, ROLE_ADMIN" />
				<user name="bob" password="bobspassword" authorities="ROLE_USER" />
			</user-service>
		</authentication-provider>
	</authentication-manager> -->


	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />	
	<!-- <bean name="requestDataValueProcessor" class="com.keep.going.filter.CSRFRequestDataValueProcessor"/> -->
	<beans:bean name="cSRFTokenManager" class="com.keep.going.security.CustomCSRFToken"/>

	<beans:bean id="custFilterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="org.springframework.security.authenticationManager" />
		<beans:property name="accessDecisionManager" ref="accessDecisionManager" />
		<beans:property name="securityMetadataSource" ref="reloadableFilterInvocationSecurityMetadataSource" />
	</beans:bean>


 	<beans:bean id="customJdbcDaoImpl" class="com.keep.going.security.CustomJdbcDaoImpl">

		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="rolePrefix" value="" />
		<beans:property name="usersByUsernameQuery" value="SELECT `ID`, `PASSWORD`, `NAME` FROM MEMBERINFO WHERE `ID`=?" />
		<beans:property name="authoritiesByUsernameQuery" value="SELECT `AUTHORITY` FROM MEMBER_AUTHORITY WHERE `ID`=?" />
		<beans:property name="enableGroups" value="false" />
	</beans:bean>
	
	<beans:bean id="customAuthenticationSuccessHandler" class="com.keep.going.security.CustomAuthenticationSuccessHandler">
		<beans:property name="targetUrlParameter" value="loginRedirect" />
		<beans:property name="useReferer" value="false" />
		<beans:property name="defaultUrl" value="/uat/uia/actionSecurityLogin.do" />
	</beans:bean>
 	<beans:bean id="customAuthenticationFailureHandler" class="com.keep.going.security.CustomAuthenticationFailureHandler">
 		<beans:property name="defaultFailureUrl" value="/uat/uia/actionMain.do?login_error=2"/>
	</beans:bean>
	
	<authentication-manager erase-credentials="false">
		
		<authentication-provider user-service-ref="customJdbcDaoImpl">
			<password-encoder ref="bcryptPasswordEncoder" />
		</authentication-provider>
	</authentication-manager>
 
 
    <http pattern="/css/**" security="none"/>
	<http pattern="/html/**" security="none"/>
    <http pattern="/images/**" security="none"/>
 	<http pattern="/js/**" security="none"/>
 	<http pattern="/resource/**" security="none"/>
 	<http pattern="\A/WEB-INF/jsp/.*\Z" request-matcher="regex" security="none"/>

 	<http pattern="/index.jsp" security="none"/> <!-- 퍼블 예시 페이지 -->
 
 	
 
 	<http auto-config='false' use-expressions="true">
 	<session-management invalid-session-url="/uat/uia/actionMain"> <!-- 세션 만료됬을때 페이지 -->
 		<concurrency-control max-sessions="1" expired-url="/uat/uia/actionMain" error-if-maximum-exceeded="true" />
 	</session-management>
 	
 	<csrf disabled="false"/>    	
    	
		<form-login username-parameter="id" password-parameter="password"
			login-page="/uat/uia/actionMain"
			login-processing-url="/uat/uia/actionSecurityLogin.do"			
			default-target-url="/uat/uia/actionMain.do"
			authentication-failure-url ="/whatthe"
			authentication-success-handler-ref="customAuthenticationSuccessHandler"
			authentication-failure-handler-ref="customAuthenticationFailureHandler" />
		<anonymous granted-authority="ANONYMOUS" />
		<!-- <anonymous granted-authority="ADMIN" /> -->
		<logout logout-success-url="/uat/uia/actionMain.do" delete-cookies="JSESSIONID" />
    
    	<custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="custFilterSecurityInterceptor" />
    	<access-denied-handler ref="accessDenied"/>
    	
	</http>



	<beans:bean id="accessDenied" class="com.keep.going.security.CustomAccessDeniedHandler">
		<beans:property name="errorPage" value="/common/error" />
	</beans:bean>

<!--  <security:authentication-manager>
    <security:authentication-provider>
      <security:user-service>
        <security:user name="jimi" password="jimispassword" authorities="ROLE_USER, ROLE_ADMIN" />
        <security:user name="bob" password="bobspassword" authorities="ROLE_USER" />
      </security:user-service>
    </security:authentication-provider>
  </security:authentication-manager> -->


	<!-- <bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased"> -->
	



</beans:beans>