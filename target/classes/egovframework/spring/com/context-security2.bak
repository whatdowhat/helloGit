<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd"
        >




	<security:http pattern="/css/**" security="none" />
	<security:http pattern="/html/**" security="none" />
	<security:http pattern="/images/**" security="none" />
	<security:http pattern="/js/**" security="none" />
	<security:http pattern="/resource/**" security="none" />
	<security:http pattern="/assets/**" security="none" />
	<security:http pattern="/fonts/**" security="none" />
	<security:http pattern="\A/WEB-INF/jsp/.*\Z"
		request-matcher="regex" security="none" />


	<security:http auto-config="true" use-expressions="true">


		<security:intercept-url pattern="/uat/uia/actionSecurityLogin.do"
			access="permitAll" />
		<security:intercept-url pattern="/uat/uia/actionMain.do"
			access="permitAll" />
		<security:intercept-url pattern="/index.jsp"
			access="permitAll" />
		<security:intercept-url pattern="/j_spring_security_check"
			access="permitAll" />
			
		<security:intercept-url pattern="/**"
			access="hasRole('ADMIN')" />
			
		<!-- <security:intercept-url pattern="/**" access="permitAll" /> <security:intercept-url 
			pattern="/*" access="permitAll" /> -->
		<security:form-login login-page="/uat/uia/actionMain.do?login_error=1"

			username-parameter="id" password-parameter="password"
			default-target-url="/uat/uia/actionSecurityLogin.do?login_error=2"
			authentication-failure-url="/uat/uia/actionSecurityLogin.do?login_error=3" />
		<security:access-denied-handler
			error-page="/accessError" />

	</security:http>

<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />	

<security:authentication-manager>
	<security:authentication-provider user-service-ref="customJdbcDaoImpl">
		<security:password-encoder ref="bcryptPasswordEncoder" />
	</security:authentication-provider>
</security:authentication-manager>


	<!-- <security:authentication-manager> <security:authentication-provider> 
		<security:user-service> <security:user name="user01" authorities="ROLE_USER" 
		password="user01" /> </security:user-service> </security:authentication-provider> 
		</security:authentication-manager> -->
	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource" users-by-username-query="
			SELECT id as username, pwd as password, 1 as enabled 
			FROM member 
			WHERE id = ? 
			"
			authorities-by-username-query="
			SELECT id as username, 
			    CASE WHEN id='admin'THEN 'ROLE_ADMIN' 
			         ELSE 'ROLE_USER' 
			    END as authority  
		    FROM member  
		    WHERE id = ?"
			/>
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- secured method -->
    <!-- DB에서 불러올 사용자 정보 및 권한 설정  -->
  <!--   <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="customAuthenticationProvider" /> 권한 설정할 커스텀 Bean
        <security:authentication-provider user-service-ref="customUserDetailsService"> 사용자 정보 설정할 커스텀 Bean
            <security:password-encoder ref="passwordEncoder"> 로그인 비밀번호 암호화 인코딩 Bean
                <security:salt-source ref="saltSource" /> 로그인 비밀번호 암호화 salt Bean
            </security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>
    
    
    권한 설정할 커스텀 Bean    
   <bean id="customAuthenticationProvider" class="egovframework.com.cmm.security.CustomAuthenticationProvider">
    </bean>
    
   
    <bean id="customUserDetailsService" class="egovframework.com.cmm.security.CustomUserDetailsService">
    </bean> 
    
    로그인 암호 인코딩 Bean
    <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
    
    로그인 비밀번호 암호화 salt Bean    
    <bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
        <property name="userPropertyToUse" value="user_id" />
    </bean> -->



</beans>


